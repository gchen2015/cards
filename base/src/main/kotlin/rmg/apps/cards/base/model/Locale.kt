package rmg.apps.cards.base.model

/**
 * The Locale of a [word or definition][Signifier]
 */
class Locale(lang: String, country: String? = null, script: String? = null) {

    val lang: String = lang.toLowerCase()
    val country: String? = country?.toUpperCase()
    val script: String? =
        if (script == null) {
            null
        } else {
            script[0].toUpperCase() + script.substring(1).toLowerCase()
        }

    private infix fun strictMatches(that: Locale): Boolean =
        this.lang == that.lang &&
        this.country == that.country &&
        this.script == that.script

    infix fun matches(that: Locale): Boolean {
        if (this.lang != that.lang) {
            return false
        }

        if (this.country != null && that.country != null && this.country != that.country) {
            return false
        }

        if (this.script != null && that.script != null && this.script != that.script) {
            return false
        }

        return true
    }

    infix fun doesntMatch(that: Locale): Boolean = !(this matches that)
    infix fun strictDoesntMatch(that: Locale): Boolean = !(this strictMatches that)

    val languageTag: String
        get() {
            return lang +
                if (country == null) {
                    ""
                } else {
                    "_$country"
                } +
                if (script == null) {
                    ""
                } else {
                    "_$script"
                }
        }

    override fun toString(): String {
        return languageTag
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (other !is Locale) return false

        return this strictMatches other
    }

    // TODO(rmgrimm): See if this can be autogenerated by something like Lombok
    override fun hashCode(): Int {
        var result = lang.hashCode()
        result = 31 * result + (country?.hashCode() ?: 0)
        result = 31 * result + (script?.hashCode() ?: 0)
        return result
    }
}
